services:
  db:  # connect to gcp backend
    image: gcr.io/cloudsql-docker/gce-proxy:1.32.0   # image containing sql proxy
    command: # use proxy to connect to cloud sql instance
      - /cloud_sql_proxy
      - -enable_iam_login
      - -instances=${SQL_CONNECTION}=tcp:0.0.0.0:5432
    # restart if container unexpectedly stops
    restart: unless-stopped
    
  mlflow-ui:
    depends_on:  # need to start sql auth proxy first, otherwise
    # mlflow server will error out after not being able to connect to db
      - db
    build: images/mlflow-server # image containing mlflow, google-storage, psycopg2
    command: # run ui connected to correct backends
      - "ui"
      - "--host"
      - 0.0.0.0
      - --backend-store-uri
      - postgresql://postgres:${POSTGRES_PASSWD}@db/postgres
      - --serve-artifacts # run proxy to serve artifacts up/downloads
      - --artifacts-destination
      - ${ARTIFACT_URI}
    restart: unless-stopped
    init: true

  proxy: # nginx reverse proxy to add password protection to mlflow ui
    build: images/proxy
    ports: 
      - "5000:5000"
    # pass login credentials to container
    environment:
      - LOGIN_USER=${LOGIN_USER}
      - LOGIN_PASSWD=${LOGIN_PASSWD}
    restart: unless-stopped

  jupyter:
    build: images/jupyter
    environment:
     # uid needs to match user on host or you will get permission error
      - USER_UID=${USER_UID}
      - LOGIN_PASSWD=${LOGIN_PASSWD} # password protect container
    ports:
      - "8888:8888"
    volumes:
    # directory to open jupyter in
      - type: bind
        source: ${WORKDIR}
        target: /mnt
    init: true
    restart: unless-stopped

